<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<title>
		Bon Apetit
	</title>
	<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
	@*	  <!-- Bootstrap CSS -->
	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">*@
	<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
	@*       sweet alert    *@
	<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
	<script src="~/Scripts/jquery.min.js">	</script>
	@*          alpine      *@
	<script defer src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js"></script>

	<!-- @*sweet alert scripts*@
	<script src="~/Scripts/sweetalert2.all.min.js"></script>
	<script src="~/Scripts/jquery.validate.min.js"></script>
	<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
	<script src="https://lipis.github.io/bootstrap-sweetalert/lib/sweet-alert.js"></script>
	<link href="~/Content/sweetalert/sweet-alert.css" rel="stylesheet" />
	@* end of sweet alert scripts*@ -->
</head>
<body>
	<div class="page-background"
		 x-data="{page:`home`,recipes :[],categoriesList:[],categoriesNamesMap:{},authenticated:false}" x-init="authenticated= await checkRefreshToken();">
		<header>
			<nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow">
				<div class="container">
					<a class="navbar-brand" @@click="page=`home`" href="#"> Bon Apetit</a>
					<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
							aria-expanded="false" aria-label="Toggle navigation">
						<span class="navbar-toggler-icon"></span>
					</button>
					<div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
						<ul class="navbar-nav flex-grow-1">
							<li class="nav-item" x-show="authenticated">
								<a class="nav-link" x-bind:class="{active:page==`categories`}" x-on:click="page=`categories`" href="#">Categories</a>
							</li>
							<li class="nav-item" x-show="authenticated">
								<a class="nav-link " x-bind:class="{active:page==`recipes`}"  x-on:click="page=`recipes`" href="#">Recipes</a>
							</li>
							<li class="nav-item" x-show="authenticated">
								<a class="nav-link " @@click="authenticated= await logOut()" href="#">Log out <img src="~/Images/logout.png" class="logout" /></a>
							</li>
						</ul>
					</div>
				</div>
			</nav>
		</header>
		@RenderBody()

		<footer class="border-top footer text-muted">
			<div class="container">
				&copy; 2022 - Bon Apetit
			</div>
		</footer>
	</div>
	<script src="~/lib/jquery/dist/jquery.min.js"></script>
	<script src="~/lib/bootstrap/dist/js/bootstrap.min.js"></script>
	<script type="text/javascript" src="https://code.jquery.com/jquery-2.1.1.min.js"></script>

	@*<!-- Option 1: Bootstrap Bundle with Popper -->
	<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
	<script src="~/js/site.js" asp-append-version="true"></script>*@
	@await RenderSectionAsync("Scripts", required: false)
	<script>
		// Example starter JavaScript for disabling form submissions if there are invalid fields
		(function() {
			'use strict'

			// Fetch all the forms we want to apply custom Bootstrap validation styles to
			var forms = document.querySelectorAll('.needs-validation')

			// Loop over them and prevent submission
			Array.prototype.slice.call(forms)
				.forEach(function(form) {
					form.addEventListener('submit', function(event) {
						if (!form.checkValidity()) {
							event.preventDefault()
							event.stopPropagation()
						}

						form.classList.add('was-validated')
					}, false)
				})
		})()
	</script>
	<script>
		function mapNames(categories) {
			let x = {}
			for (let i = 0; i < categories.length; i++) {
				x[categories[i].id] = categories[i].name;
			}
			return x;
		}
		function getCookie(cname) {
			let name = cname + "=";
			let decodedCookie = decodeURIComponent(document.cookie);
			let ca = decodedCookie.split(';');
			for (let i = 0; i < ca.length; i++) {
				let c = ca[i];
				while (c.charAt(0) == ' ') {
					c = c.substring(1);
				}
				if (c.indexOf(name) == 0) {
					return c.substring(name.length, c.length);
				}
			}
			return "";
		}
		async function checkRefreshToken() {
			//let refresh = getCookie("refreshToken");
			let checked = false;
			try {
				await postData('@(Model.Configuration["BaseUrl"] + "refresh-token")')
					.then(async (data) => {
						if (data.status == 200) {
							data = await data.json();
							localStorage["access-token"] = data;
							checked = true;
						}
						else {
							data = await data.json();
						}
					})
			} catch (err) {
				//failureAlert("something went wrong with your request .. check your data and try again");
			}
			return checked;
		}
		async function logOut() {
			let authenticated = true;
			try {
				await postData('@(Model.Configuration["BaseUrl"] + "logout")')
					.then(async (data) => {
						if (data.status == 200) {
							data = await data.json();
							localStorage["access-token"] = "";
							authenticated = false;
                            successAlert("successfull logout");
						}
						else {
							data = await data.json();
							failureAlert(data);
						}
					})
			} catch (err) {
				failureAlert("something went wrong with your request ..wait some seconds and try again");
			}
			return authenticated;
		}

	</script>

</body>
</html>
